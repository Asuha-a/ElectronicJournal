{"version":3,"sources":["components/Article.js","containers/ArticleListView.js","components/Comment.js","components/Form.js","components/Loading.js","components/CommentForm.js","containers/ArticleDetailView.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["Articles","props","react_default","a","createElement","es_list","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","footer","renderItem","item","Item","key","title","Meta","href","concat","id","description","text","ArticleList","state","articles","_this2","this","axios","get","then","res","setState","Article","React","Component","connect","isAuthenticated","token","CommentComponent","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","comment","commentData","filter","index","target_post","articleID","list","i","push","card","CustomForm","handleFormSubmit","event","requestType","preventDefault","name","target","elements","value","window","location","reload","post","author","catch","error","put","es_form","onSubmit","label","input","type","placeholder","es_button","htmlType","withRouter","LoadingComponent","CommentFormComponent","Form","Loading","ArticleDetail","article","match","params","Number","isInteger","Comment","CommentForm","authSuccess","authFail","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","FormItem","antIcon","icon","style","fontSize","spin","NormalLoginForm","handleSubmit","e","form","validateFields","err","values","onAuth","userName","password","history","errorMessage","message","getFieldDecorator","loading","indicator","className","rules","required","prefix","color","marginRight","react_router_dom","to","WrappedNormalLoginForm","create","username","expirationDate","Date","getTime","setItem","actions","RegistrationForm","confirmDirty","validateFieldsAndScroll","email","confirm","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","Signup_FormItem","validator","onBlur","WrappedRegistrationForm","password1","password2","BaseRouter","react_router","exact","path","component","Login","Signup","Header","Layout","Content","Footer","CustomLayout","layout","menu","theme","mode","defaultSelectedKeys","lineHeight","onClick","padding","breadcrumb","margin","background","minHeight","children","textAlign","App","onTryAutoSignup","routes","getItem","undefined","Boolean","hostname","updateObject","oldObject","updatedProperties","objectSpread","initialState","reducer","arguments","length","action","authStart","authLogout","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ef37b46.chunk.js","sourcesContent":["import React from 'react';\nimport { List } from 'antd';\n\n\nconst Articles = (props) => {\n  return (\n  <List\n    itemLayout=\"vertical\"\n    size=\"large\"\n    pagination={{\n      onChange: page => {\n        console.log(page);\n      },\n      pageSize: 3,\n    }}\n    dataSource={props.data}\n    footer={\n      <div>\n        <b>ant design</b> footer part\n      </div>\n    }\n    renderItem={item => (\n      <List.Item\n        key={item.title}\n      >\n        <List.Item.Meta\n          title={<a href={`/articles/${item.id}`}>{item.title}</a>}\n          description={item.description}\n        />\n      {item.text}\n      </List.Item>\n    )}\n  />\n  );\n}\n\n\nexport default Articles;\n","import React from 'react';\nimport Articles from '../components/Article';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass ArticleList extends React.Component {\n\n  state = {\n    articles: []\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:8000/api/v1/')\n      .then(res => {\n        this.setState({\n          articles: res.data\n        });\n        console.log('res.data:', res.data);\n      })\n  }\n\n  render() {\n    return (\n      <Articles data = {this.state.articles}/>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nexport default connect(mapStateToProps)(ArticleList);\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Card } from 'antd';\n\nclass CommentComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: {},\n    }\n  }\n\n\n\n  componentDidMount() {\n    console.log(\"this\", this);\n    axios.get('http://127.0.0.1:8000/api/v1/comment')\n      .then(res => {\n        let commentData = res.data.filter((item, index) => {\n          if (item.target_post === this.props.articleID) return true;\n        });\n        this.setState({\n          comment: commentData\n        });\n        console.log('this.state.comment: ', this.state.comment);\n      })\n  }\n\n  render() {\n    console.log('this.state.comment', this.state.comment);\n    let list = [];\n    let data = this.state.comment;\n    for(let i in this.state.comment){\n      list.push(data[i].comment);\n      list.push(<br />);\n    }\n    console.log('list', list);\n    return (\n      <div>\n      <Card title=<h1>Comments</h1>>\n        {list}\n      </Card>\n      </div>\n    );\n  }\n\n}\n\nexport default CommentComponent;\n","import React from 'react';\n\nimport { Form, Input, Button } from 'antd';\nimport axios from 'axios';\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router';\n\nclass CustomForm extends React.Component {\n\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  }\n\n  handleFormSubmit = (event, requestType) => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const comment = event.target.elements.comment.value;\n\n    console.log(\"name: \", name);\n    console.log(\"comment: \", comment);\n    console.log(\"target_post: \", this.props.target_post);\n\n    window.location.reload();\n\n    switch(requestType) {\n      case 'post':\n        return axios.post('http://127.0.0.1:8000/api/v1/comment/', {\n          author: name,\n          target_post: this.props.target_post,\n          comment: comment\n        }).then(res => console.log(res))\n          .catch(error => console.error(error));\n        console.log('post completed');\n      case 'put':\n        return axios.put('http://127.0.0.1:8000/api/v1/comment/', {\n          author: name,\n          target_post: this.props.target_post,\n          comment: comment\n        }).then(res => console.log(res))\n          .catch(error => console.error(error));\n    }\n    //this.props.history.push(`/articles/${this.props.target_post}`);\n  }\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={(event) => this.handleFormSubmit(\n          event,\n          this.props.requestType,\n        )}>\n          <Form.Item label=\"\">\n            <Input type='hidden' value='1' name=\"name\" placeholder=\"Put your name here...\" />\n          </Form.Item>\n          <Form.Item label=\"Comment\">\n            <Input name=\"comment\" placeholder=\"Enter some text...\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CustomForm);\n","import React from 'react';\n\nclass LoadingComponent extends React.Component {\n  render() {\n    return (\n      ''\n    );\n  }\n}\n\nexport default LoadingComponent;\n","import React from 'react';\nimport { Card } from 'antd';\nimport { connect } from 'react-redux';\nimport CustomForm from '../components/Form';\nimport Loading from '../components/Loading'\n\nclass CommentFormComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  /*\n  componentWillReceiveProps(newProps) {\n    console.log('isAuthenticated: ', newProps.isAuthenticated);\n  }\n  */\n\n\n  componentDidMount() {\n    console.log('isAuthenticated: ', this.props.isAuthenticated);\n  }\n\n\n  render() {\n    if (!this.props.isAuthenticated)\n      return <Loading />;\n    return (\n      <Card title=<h1>Add New Comment</h1>>\n        <CustomForm\n          requestType=\"post\"\n          target_post={this.props.articleID}/>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nexport default connect(mapStateToProps)(CommentFormComponent);\n","import React from 'react';\nimport axios from 'axios';\n\nimport { Card } from 'antd';\nimport { connect } from 'react-redux';\nimport CommentComponent from '../components/Comment';\nimport CommentFormComponent from '../components/CommentForm';\n\nimport Loading from '../components/Loading'\n\nclass ArticleDetail extends React.Component {\n\n  state = {\n    article: {}\n  }\n\n  componentDidMount() {\n    const articleID = this.props.match.params.articleID;\n    axios.get(`http://127.0.0.1:8000/api/v1/${articleID}`)\n      .then(res => {\n        this.setState({\n          article: res.data\n        });\n        console.log('article res.data: ', res.data);\n      })\n\n  }\n\n  render() {\n    if (!Number.isInteger(this.state.article.id))\n      return <Loading />;\n\n    console.log('this.state.article.id', this.state.article.id);\n    return (\n      <div>\n        {this.props.isAuthenticated}\n        <Card title=<h1>{this.state.article.title}</h1>>\n          <p>{this.state.article.text}</p>\n        </Card>\n        <CommentComponent articleID={this.state.article.id}/>\n        <CommentFormComponent articleID={this.state.article.id}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nexport default connect(mapStateToProps)(ArticleDetail);\n","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n            username: username,\n            password: password\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        console.log({\n          username: username,\n          email: email,\n          password1: password1,\n          password2: password2\n        });\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n","import React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nconst FormItem = Form.Item;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.userName, values.password);\n        this.props.history.push('/');\n      }\n    });\n  }\n\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n        errorMessage = (\n            <p>{this.props.error.message}</p>\n        );\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <div>\n            {errorMessage}\n            {\n                this.props.loading ?\n\n                <Spin indicator={antIcon} />\n\n                :\n\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                    <FormItem>\n                    {getFieldDecorator('userName', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                    )}\n                    </FormItem>\n\n                    <FormItem>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!' }],\n                    })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                    )}\n                    </FormItem>\n\n                    <FormItem>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                        Login\n                    </Button>\n                    Or\n                    <NavLink\n                        style={{marginRight: '10px'}}\n                        to='/signup/'> signup\n                    </NavLink>\n                    </FormItem>\n                </Form>\n            }\n      </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);\n","import React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nconst FormItem = Form.Item;\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.props.onAuth(\n            values.userName,\n            values.email,\n            values.password,\n            values.confirm\n        );\n        this.props.history.push('/');\n      }\n    });\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  }\n\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n\n        <FormItem>\n            {getFieldDecorator('userName', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n            })(\n                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n            )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('email', {\n            rules: [{\n              type: 'email', message: 'The input is not valid E-mail!',\n            }, {\n              required: true, message: 'Please input your E-mail!',\n            }],\n          })(\n            <Input prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{\n              required: true, message: 'Please input your password!',\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('confirm', {\n            rules: [{\n              required: true, message: 'Please confirm your password!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" onBlur={this.handleConfirmBlur} />\n          )}\n        </FormItem>\n\n        <FormItem>\n        <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n            Signup\n        </Button>\n        Or\n        <NavLink\n            style={{marginRight: '10px'}}\n            to='/login/'> login\n        </NavLink>\n        </FormItem>\n\n      </Form>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);\n","import React from 'react';\nimport { Route } from 'react-router-dom'\n\nimport ArticleList from './containers/ArticleListView';\nimport ArticleDetail from './containers/ArticleDetailView';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\n\nconst BaseRouter = () => (\n  <div>\n    <Route exact path='/login/' component={Login} />\n    <Route exact path='/signup/' component={Signup} />\n    <Route exact path='/' component={ArticleList} />\n    <Route exact path='/articles/:articleID/' component={ArticleDetail} />\n  </div>\n);\n\nexport default BaseRouter;\n","\nimport React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\n\nconst { Header, Content, Footer } = Layout;\n\nclass CustomLayout extends React.Component {\n    render() {\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                <div className=\"logo\" />\n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    defaultSelectedKeys={['2']}\n                    style={{ lineHeight: '64px' }}\n                >\n\n                {\n                    this.props.isAuthenticated ?\n\n                    <Menu.Item key=\"2\" onClick={this.props.logout}>\n                        Logout\n                    </Menu.Item>\n\n                    :\n\n                    <Menu.Item key=\"2\">\n                        <Link to=\"/login\">Login</Link>\n                    </Menu.Item>\n                }\n\n                    <Menu.Item key=\"1\">\n                        <Link to=\"/\">Posts</Link>\n                    </Menu.Item>\n\n                </Menu>\n                </Header>\n                <Content style={{ padding: '0 50px' }}>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                    <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                    <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\n                </Breadcrumb>\n                    <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\n                        {this.props.children}\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>\n                Ant Design ©2016 Created by Ant UED\n                </Footer>\n            </Layout>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(actions.logout())\n    }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(CustomLayout));\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\nimport * as actions from './store/actions/auth';\n\nimport CustomLayout from './containers/Layout';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <CustomLayout {...this.props}>\n              <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './store/reducers/auth';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}